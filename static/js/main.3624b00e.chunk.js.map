{"version":3,"sources":["firebase.js","components/login.js","components/list.js","components/add.js","components/routes.js","components/welcome.js","components/count.js","components/dash.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FormPage","useEffect","className","md","label","group","type","validate","id","containerClass","onClick","email","document","getElementById","value","auth","sendPasswordResetEmail","then","u","alert","catch","err","message","href","password","signInWithEmailAndPassword","console","log","color","rounded","List","props","useState","user","updateuser","check","n","db","firestore","settings","timestampsInSnapshots","collection","get","querySnapshot","data","docs","map","doc","i","length","push","object","Card","border","bg","Header","Name","Body","Text","Code","Add","material","containerClassName","hint","outline","pname","code","add","React","Component","Welcome","Alert","variant","Heading","Count","pizza","setpizza","kulcha","setkulcha","patty","setpatty","list","count","update","error","NavbarPage","state","isOpen","msg","countpage","rulepage","toggleCollapse","setState","dark","expand","this","navbar","left","active","to","right","nav","caret","icon","fab","App","onAuthStateChanged","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3624b00e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n \r\nconst firebaseConfigs = {\r\n   /* apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: \"1:994880379089:web:bd24da8d676a1fd0758df0\",\r\n    measurementId: \"G-KM2ZDTEXZ7\"\r\n    */\r\n   apiKey: \"AIzaSyCY44NmMaX-1m-ziUHuyOR26D0OJAc927c\",\r\n    authDomain: \"personal-38ff2.firebaseapp.com\",\r\n    databaseURL: \"https://personal-38ff2.firebaseio.com\",\r\n    projectId: \"personal-38ff2\",\r\n    storageBucket: \"personal-38ff2.appspot.com\",\r\n    messagingSenderId: \"1052030309142\",\r\n    appId: \"1:1052030309142:web:c910b04497ce69dd1a3637\",\r\n    measurementId: \"G-YDW2FCR93G\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfigs);\r\n  \r\n\r\n  export {firebase}","import React, {components, useEffect,useState} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport {firebase} from '../firebase'\r\n\r\nconst FormPage = () => {\r\n\r\n  useEffect(() => {\r\n      //empty\r\n  }, [])\r\n\r\n  const authlogin = () => {\r\n    var email = document.getElementById(\"loginemail\").value;\r\n    var password = document.getElementById(\"loginpassword\").value;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then((u) => {console.log(u);}).catch((err) => {alert(err.message);});\r\n    \r\n    \r\n    }\r\n\r\n    const authsignup = () => {\r\n\r\n      //var email = document.getElementById(\"loginemail\").value;\r\n      //var password = document.getElementById(\"loginpassword\").value;\r\n      //firebase.auth().createUserWithEmailAndPassword(email, password).then((u) => { firebase.auth().signInWithEmailAndPassword(email, password).then((u) => {/*console.log(u);*/}).catch((err) => {alert(err.message);});}).catch((err) => {alert(err.message);});\r\n      alert(\"Currently Not Accepting any applications NO POLY\")\r\n    }\r\n    const authforgot = () => {\r\n\r\n      var email = document.getElementById(\"loginemail\").value;\r\n      firebase.auth().sendPasswordResetEmail(email).then((u) => {alert(\"Email sent\")}).catch((err) => {alert(err.message);});\r\n\r\n    }\r\n\r\n\r\n  return (<center>\r\n    <MDBContainer className=\"mx-auto\">\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 peach-gradient\">\r\n              <MDBRow className=\"d-flex justify-content-center\">\r\n                <h3 className=\"white-text mb-3 pt-3 font-weight-bold\">\r\n                  Log in\r\n                </h3>\r\n              </MDBRow>\r\n              \r\n            </div>\r\n            <MDBCardBody className=\"mx-4 mt-4\">\r\n              <MDBInput label=\"Your email\" group type=\"text\" validate id=\"loginemail\" />\r\n              <MDBInput\r\n                label=\"Your password\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                id=\"loginpassword\"\r\n                containerClass=\"mb-0\"\r\n              />\r\n              <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                Forgot\r\n                <a\r\n                  onClick={authforgot}\r\n                  href=\"#!\"\r\n                  className=\"dark-grey-text ml-1 font-weight-bold\"\r\n                >\r\n                  Password?\r\n                </a>\r\n              </p>\r\n              <MDBRow className=\"d-flex align-items-center mb-4 mt-5\">\r\n                <MDBCol md=\"5\" className=\"d-flex align-items-start\">\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn\r\n                      onClick={authlogin}\r\n                      color=\"grey\"\r\n                      rounded\r\n                      type=\"button\"\r\n                      className=\"z-depth-1a\"\r\n                    >\r\n                      Log in\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"7\" className=\"d-flex justify-content-end\">\r\n                  <p className=\"font-small grey-text mt-3\">\r\n                    Don't have an account?\r\n                    <a\r\n                      onClick={authsignup}\r\n                      href=\"#!\"\r\n                      className=\"dark-grey-text ml-1 font-weight-bold\"\r\n                    >\r\n                      Sign up\r\n                    </a>\r\n                  </p>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer></center>\r\n  );\r\n};\r\n\r\nexport default FormPage;","import React, { Fragment,useState,useEffect} from \"react\";\r\nimport { MDBBtn,MDBCol, MDBFormInline, MDBIcon,MDBInput} from \"mdbreact\";\r\nimport {firebase} from '../firebase'\r\nimport { MDBContainer, MDBAlert } from 'mdbreact';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\nconst List = props => {\r\n   \r\n\r\n    \r\n\r\n    const [user , updateuser] = useState([]);\r\n    var check= true;\r\n    \r\n    const n = [];\r\n\r\n    const db = firebase.firestore();\r\n   \r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n        db.collection(\"Projects\")\r\n        .get()\r\n        .then(querySnapshot => {\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n               \r\n        for(var i=0 ; i<data.length ; i++){\r\n       \r\n        \r\n       \r\n       n.push(data[i]);\r\n     \r\n    }\r\n    if(check){updateuser(n);}\r\n    }\r\n    \r\n    );\r\n       \r\n       \r\n       console.log(user);\r\n       console.log(user.length);\r\n        if(user.length>1){check=false;}\r\n       \r\n      \r\n    return (\r\n    <div id=\"list\">\r\n\r\n       \r\n\r\n        <br></br>\r\n        \r\n    {user.map((object, i) => \r\n    \r\n    /////////////////////\r\n    <div>\r\n    <Card border=\"success\" bg=\"light\" >\r\n    <Card.Header>{object.Name}</Card.Header>\r\n    <Card.Body>\r\n     \r\n      <Card.Text >\r\n        {object.Code}\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card><br></br>\r\n  </div>\r\n  \r\n    //////////////\r\n    \r\n    )}\r\n   \r\n        \r\n        \r\n       \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default List;","import React ,{ Fragment,useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {firebase} from '../firebase'\r\nimport { MDBBadge, MDBContainer } from \"mdbreact\";\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport { MDBInputGroup } from \"mdbreact\";\r\nimport List from './list';\r\n\r\n\r\n\r\n\r\n\r\nconst Add= props => {\r\n\r\n    const [pid , setpid] = useState(false);\r\n    const add = () => {\r\n        var pname = document.getElementById(\"pname\").value;\r\n       \r\n        var code = document.getElementById(\"code\").value;\r\n        const db = firebase.firestore();\r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n        db.collection(\"Projects\")\r\n        .add({\r\n            Name : pname,Code : code\r\n        }).then(doc => {alert(\"Rule added\")}).catch((err) => {alert(err.message);});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card className=\"text-center\" >\r\n            <Card.Body>\r\n            \r\n            <Card.Text>\r\n                <MDBContainer>\r\n                <MDBInputGroup material containerClassName=\"mb-3 mt-0\"  hint=\"Title\" id=\"pname\"/>\r\n               \r\n                <MDBInputGroup\r\n                        material\r\n                        className=\"mb-0\"\r\n                        hint=\"Details\"\r\n                        type=\"textarea\" id=\"code\"/>\r\n                        \r\n                </MDBContainer>\r\n            </Card.Text>\r\n            <MDBBtn rounded outline color=\"success\" onClick={add}>Add Rule</MDBBtn>\r\n               \r\n            </Card.Body>\r\n            \r\n            </Card>\r\n        \r\n        <List/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Add from './add';\r\nimport List from './list';\r\n\r\n\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        \r\n       \r\n        <Route path='/add' component={Add} />\r\n        \r\n        <Route path='/show' component={List} />\r\n      \r\n       \r\n        \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Welcome= props => {\r\nreturn (\r\n<div>\r\n<Alert variant=\"success\">\r\n  <Alert.Heading>Welcome Sugar</Alert.Heading>\r\n  \r\n  <hr />\r\n  <p className=\"mb-0\">\r\n Send nudes (T=T)\r\n  </p>\r\n</Alert>\r\n    \r\n    \r\n</div>\r\n);\r\n}\r\n\r\nexport default Welcome;","import React, { Fragment,useState,useEffect} from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport {firebase} from '../firebase'\r\n\r\n\r\nconst Count = props => {\r\n\r\n    const [pizza , setpizza] = useState(10);    \r\n    const [kulcha , setkulcha] = useState(10);\r\n    const [patty , setpatty] = useState(10);\r\n    const addPizza = () => {\r\n        var doc = db.collection(\"Counts\").doc(\"pizza\");\r\n        return doc.update({\r\n            count: pizza+1\r\n        })\r\n        .then(function() {\r\n            setpizza(pizza+1)\r\n        })\r\n        .catch(function(error) {\r\n            alert(\"Error updating pizza count: \", error);\r\n        });\r\n    }\r\n    const addpatty = () => {\r\n        var doc = db.collection(\"Counts\").doc(\"patty\");\r\n        return doc.update({\r\n            count: patty+1\r\n        })\r\n        .then(function() {\r\n            setpatty(patty+1)\r\n        })\r\n        .catch(function(error) {\r\n            alert(\"Error updating patty count: \", error);\r\n        });\r\n    }\r\n    const addKulcha = () => {\r\n        var doc = db.collection(\"Counts\").doc(\"kulcha\");\r\n        return doc.update({\r\n            count: kulcha+1\r\n        })\r\n        .then(function() {\r\n            setkulcha(kulcha+1)\r\n        })\r\n        .catch(function(error) {\r\n            alert(\"Error updating kulcha count: \", error);\r\n        });\r\n    }\r\n\r\n    const db = firebase.firestore(); \r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n        db.collection(\"Counts\")\r\n    .get()\r\n    .then(querySnapshot => {\r\n        const data = querySnapshot.docs.map((doc) => ({id: doc.id, ...doc.data()}));\r\n        for (let list in data) {\r\n            if (data[list].id === \"pizza\") {\r\n                setpizza(data[list].count)\r\n            }\r\n            if (data[list].id === \"kulcha\") {\r\n                setkulcha(data[list].count)\r\n            }\r\n            if (data[list].id === \"patty\") {\r\n                setpatty(data[list].count)\r\n            }\r\n        }\r\n    }\r\n    \r\n    );       \r\n    return (\r\n    <div id=\"count\">\r\n        Pizza : {pizza} <button onClick={addPizza}>Increase Pizza Count</button><br></br>\r\n        Kulcha : {kulcha} <button onClick={addKulcha}>Increase Kulcha Count</button><br></br>\r\n        Patty : {patty} <button onClick={addpatty}>Increase Kulcha Count</button><br></br>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Count;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\nimport {firebase} from '../firebase'\r\nimport Add from \"./add\";\r\nimport Welcome from \"./welcome\";\r\nimport Count from \"./count\";\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false,\r\n  msg:true,\r\n  countpage:false,\r\n  rulepage:true,\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen , msg:false});\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n    <Router>\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">EWW Cringy</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active={this.state.rulepage}>\r\n              <MDBNavLink to=\"/EWW\">Rules</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem active={this.state.countpage}>\r\n              <MDBNavLink to=\"/EWW\" onClick={() => this.setState({ countpage:true,rulepage:false})}>Count</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/EWW\">Pricing</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              \r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            \r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem >Sign Out</MDBDropdownItem>\r\n                 \r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"twitter\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"google-plus-g\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n     \r\n   \r\n     \r\n    </Router>\r\n    {this.state.rulepage && <div><Welcome/><Add/></div>}\r\n    {this.state.countpage && <div><Count/></div>}\r\n    </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React, {components, useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from \"./components/login\"\nimport Dash from \"./components/dash\"\nimport {firebase} from './firebase'\n\n\n\n\nfunction App() {\n\n  const [user , updateuser] = useState(false);\n  \n\n  useEffect(() => {\n   // firebase.auth().signOut().then(() => {console.log('Signed Out');}).catch(e=>{console.error('Sign Out Error', e);});\n      firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        updateuser(true);\n        console.log(user.email);\n        var currentdate = new Date(); \n        var datetime = \"Last Sync: \" + currentdate.getDate() + \"/\"\n                + (currentdate.getMonth()+1)  + \"/\" \n                + currentdate.getFullYear() + \" @ \"  \n                + currentdate.getHours() + \":\"  \n                + currentdate.getMinutes() + \":\" \n                + currentdate.getSeconds();\n                console.log(datetime);\n                const db = firebase.firestore();\n                db.settings({\n                timestampsInSnapshots: true\n                            });\n                db.collection(user.email)\n                .add({\n                   Date : datetime\n                }).then(doc => {alert(\"Rule added\")}).catch((err) => {alert(err.message);});\n            \n      \n      } else {\n        updateuser(false);\n      }\n    });\n\n\n  }, [])\n \n  \n  return (\n    <div className=\"App\">\n      \n      { user ? (<Dash/>) : (<Login/>)}\n    \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}